(function(a){"use strict";function b(){const a=new Map,b={delete(c,d){if(b.has(c,d)){const b=a.get(c);b.has(d)&&b.delete(d),b.size||a.delete(c)}},set(b,c,d){e(c)&&(!a.has(b)&&a.set(b,new Set),!0===d&&(c.__isOnce=!0),a.get(b).add(c))},get:b=>a.get(b),has:(b,c)=>0<a.size&&a.has(b)&&a.get(b).has(c),loop(b,c){a.has(b)&&a.get(b).forEach((a,b)=>{c(a),!0===a.__isOnce&&b.delete(a)})},makeHandle(a,c){if(!e(c))throw new TypeError("eventsys : listener needs a function");const d={on(){if(Array.isArray(a))for(const d of a)b.set(d,c);else b.set(a,c);return d},once(){if(Array.isArray(a))for(const d of a)b.set(d,c,!0);else b.set(a,c,!0);return d},off(){if(Array.isArray(a))for(const d of a)b.delete(d,c);else b.delete(a,c);return d}};return d}};return b}function c(a){a||(a={});const c=b();let d=!1;return j(a,{on:(a,b)=>c.makeHandle(a,b).on(),once:(a,b)=>c.makeHandle(a,b).once(),off:(a,b)=>c.makeHandle(a,b).off(),emit(b){if(!d&&f(b)){const d=[].slice.call(arguments,1);c.loop(b,b=>b.apply(a,d))}else throw new TypeError("eventsys : you cannot emit that! "+b)},stopall:a=>d=!g(a)||a,defineHandle(b,c){c||(c=b),a[b]=(b,d)=>a[d?"once":"on"](c,b)}})}function d(a,g){a||(a={}),g||(a=c(a));const j=b();for(let b in k(a,"isObservable",l(!0)),["$get","$set"].map(b=>{const c="$get"==b?"Get":"Set";k(a,b,l((a,b)=>{if(e(a)&&(b=a,a="*"),!e(b))throw new Error("."+a+" no function");return b.prop=f(a)?a:"*",j.makeHandle(c,b).on()}))}),k(a,"get",l(b=>{if("get"!=b&&"set"!=b){let c;return j.loop("Get",d=>{("*"===d.prop||d.prop===b)&&(c=d(b,a))}),c==i?a[b]:c}return a[b]})),k(a,"set",l((b,c)=>{let e;j.loop("Set",d=>{("*"===d.prop||d.prop===b)&&(e=d(b,c,a,Object.hasOwnProperty(a,b)))}),e=e==i?c:e,h(e)&&!e.isObservable&&(e=d(e)),a.emit("$uberset:"+b,e),a[b]=e})),a)h(a[b])&&!a[b].isObservable&&(a[b]=d(a[b]));return"undefined"==typeof Proxy?(console.warn("This JavaScript Environment does not support Proxy, observables need to use the .set and .get accessors to work"),a):new Proxy(a,{get(a,b){if("get"!=b&&"set"!=b){let c;return j.loop("Get",d=>{("*"===d.prop||d.prop===b)&&(c=d(b,a))}),c==i?Reflect.get(a,b):c}return Reflect.get(a,b)},set(a,b,c){let e,f=!1;return j.loop("Set",d=>{("*"===d.prop||d.prop===b)&&(f?(c=e,f=!1):f=!0,e=d(b,c,a,!Reflect.has(a,b)))}),e=e==i?c:e,h(e)&&!e.isObservable&&(e=d(e)),a.emit("$uberset:"+b,e),Reflect.set(a,b,e)}})}const e=a=>a instanceof Function,f=a=>"string"==typeof a,g=a=>"boolean"==typeof a,h=a=>"[object Object]"===toString.call(a),i=void 0,{assign:j,defineProperty:k}=Object,l=(a,b,c)=>({value:a,write:!!g(b)&&b,enumerable:!!g(c)&&c});d.observable=d,d.eventsys=c,d.listener=b,"undefined"==typeof module?a.define instanceof Function&&a.define.amd?a.define(["craft-observable"],()=>d):a.observable=d:module.exports=d})("undefined"==typeof global?window:global);